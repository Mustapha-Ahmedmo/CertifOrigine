version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod  # Use a production Dockerfile
    ports:
      - "5001:5001"
    environment:
      - JWT_SECRET=your_jwt_secret
      - POSTGRES_USER=exampleuser
      - POSTGRES_PASSWORD=exampleuserpassword
      - POSTGRES_DB=djiboutiport
      - POSTGRES_HOST=db  # Reference the db service name
      - POSTGRES_PORT=5432
    depends_on:
      - db
    networks:
      - app-network
    volumes:
      - ./backend/data:/usr/src/app/data  # Persist data folder

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod  # Use the updated production Dockerfile
      args:
        VITE_API_URL: "http://51.195.203.178/api"  # Pass the build argument
    environment:
      - VITE_API_URL=http://51.195.203.178/api  # Optional, for runtime use
    networks:
      - app-network
    volumes:
      - ./frontend/dist:/app/dist  # Mount the host's dist directory to store built frontend
    command: ["npm", "run", "build"]  # Run the build command

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"  # Expose port 80 for the reverse proxy and frontend
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf  # Use your custom Nginx config
      - ./frontend/dist:/usr/share/nginx/html  # Mount the built dist directory from host
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

  db:
    image: postgres:16.4
    container_name: postgres-container
    environment:
      POSTGRES_USER: exampleuser
      POSTGRES_PASSWORD: exampleuserpassword
      POSTGRES_DB: djiboutiport
    volumes:
      - postgres-data:/var/lib/postgresql/data  # Persist PostgreSQL data
    ports:
      - "5432:5432"  # Expose PostgreSQL port for external connections (optional)
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-container
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "8081:80"  # Expose pgAdmin on port 8081
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data: