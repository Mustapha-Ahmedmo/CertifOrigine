version: '3'
services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"  # Expose port 80 for the reverse proxy
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf  # Mount the custom Nginx config
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "5001:5001"
    volumes:
      - ./backend:/usr/src/app  # Recharger les fichiers locaux
      - /usr/src/app/node_modules
    environment:
      - JWT_SECRET=your_jwt_secret
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/usr/src/app  # Recharger les fichiers locaux
      - /usr/src/app/node_modules
    environment:
      - VITE_API_URL=http://localhost/api  # Access backend via service name
    depends_on:
      - backend
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: examplepassword
      MYSQL_DATABASE: exampledb
      MYSQL_USER: exampleuser
      MYSQL_PASSWORD: exampleuserpassword
    volumes:
      - mysql-data:/var/lib/mysql  # Persist MySQL data
    ports:
      - "3306:3306"
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-container
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: examplepassword
    ports:
      - "8080:80"  # Expose port 8080 for phpMyAdmin access
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data: